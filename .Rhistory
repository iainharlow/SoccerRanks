"Tags",
"PostHistory",
"Users"]
list = (1,2,3)
url <- "http://thedataincubator-challenge.s3.amazonaws.com/HCHACdrgRBoVokdgdJNF"
filenames <- c("Badges",
"Comments",
"PostLinks",
"Tags",
"PostHistory",
"Users",
"Votes",
"Posts")
for (name in filenames){
print(name)
}
for (name in filenames){name = 5}
Users
for (name in filenames){name <- 5}
Users
url <- "http://thedataincubator-challenge.s3.amazonaws.com/HCHACdrgRBoVokdgdJNF/"
filenames <- c("Badges",
"Comments",
"PostLinks",
"Tags",
"PostHistory",
"Users",
"Votes",
"Posts")
for (name in filenames){
download.file(url+name+".xml.gz",name+".xml.gz",method="auto")
gunzip(name+".xml.gz")
xml_+"name" <- xmlTreeParse("Tags.xml")
}
getwd()
url <- "http://thedataincubator-challenge.s3.amazonaws.com/HCHACdrgRBoVokdgdJNF/"
filenames <- c("Badges",
"Comments",
"PostLinks",
"Tags",
"PostHistory",
"Users",
"Votes",
"Posts")
for (filename in filenames){
download.file(url+filename+".xml.gz",filename+".xml.gz",method="auto")
gunzip(filename+".xml.gz")
xml_filename <- paste("xml_", filename, sep = "")
assign(xml_filename, xmlTreeParse(filename+".xml"))
}
for (filename in filenames){
download.file(url+filename+".xml.gz",filename+".xml.gz",method="auto")
gunzip(filename+".xml.gz")
xml_filename <- paste("xml_", filename, sep = "")
#assign(xml_filename, xmlTreeParse(filename+".xml"))
}
for (filename in filenames){
download.file(url+filename+".xml.gz",filename+".xml.gz",method="auto")
gunzip(filename+".xml.gz")
#xml_filename <- paste("xml_", filename, sep = "")
#assign(xml_filename, xmlTreeParse(filename+".xml"))
}
for (filename in filenames){
download.file(paste(url,filename,".xml.gz"),paste(filename,".xml.gz"),method="auto")
gunzip(paste(filename,".xml.gz"))
#xml_filename <- paste("xml_", filename, sep = "")
#assign(xml_filename, xmlTreeParse(filename+".xml"))
}
for (filename in filenames){
download.file(paste(url,filename,".xml.gz", sep = ""),
paste(filename,".xml.gz", sep = ""),
method="auto")
gunzip(paste(filename,".xml.gz", sep = ""))
#xml_filename <- paste("xml_", filename, sep = "")
#assign(xml_filename, xmlTreeParse(filename+".xml"))
}
for (filename in filenames){
xml_filename <- paste("xml_", filename, sep = "")
assign(xml_filename, xmlTreeParse(filename+".xml"))
}
for (filename in filenames){
xml_filename <- paste("xml_", filename, sep = "")
assign(xml_filename, xmlTreeParse(paste("xml_", filename, sep = "")))
}
for (filename in filenames){
xml_filename <- paste("xml_", filename, sep = "")
assign(xml_filename, xmlTreeParse(paste(filename,".xml",sep = "")))
}
mylist <- xmlToList(xml_Tags)
View(mylist)
library(plyr)
library(dplyr)
names(mylist)
mylist[1:10]
?ldply
ldply(xmlToList(Tags_xml), function(x) { data.frame(x[!names(x)=="Id"]) } )
ldply(xmlToList(xml_Tags), function(x) { data.frame(x[!names(x)=="Id"]) } )
ldply(xmlToList(xml_Tags), function(x) { data.frame(x) } )
mylist[1:5]
mylist[1]
?mylist[1]
class(mylist[1])
class(mylist[1][1])
mylist[1][1]
mylist[1][1][1]
(mylist[1])[1]
ldply(xmlToList(xml_Tags), data.frame )
mylist[[1]]
mylist[[2]]
class(mylist[[1]])
names(xml_Tags)
xml_Tags
content <- as.data.frame(matrix(mylist, ncol = 8, byrow = TRUE))
content
mylist[[1]]
mylist[[1]][1]
content <- as.data.frame(matrix(mylist, ncol = 1, byrow = TRUE))
content
?xPath
names(mylist[[1]])
mylist[[1]]
mtcars
mtcars[33,]=c(1,2,3,4,5,6,7,8,9,10,11)
mtcars
names(mylist[[1]])
mylist[[1]]
ExcerptPostId=integer(),
df_Tags <- data.frame(Id=integer(),
TagName=character(),
Count=integer(),
ExcerptPostId=integer(),
WikiPostId=integer(),
stringsAsFactors=FALSE)
df_Tags <- data.frame(Id=integer(),
TagName=character(),
Count=integer(),
ExcerptPostId=integer(),
WikiPostId=integer(),
stringsAsFactors=FALSE)
names(df_Tags)
filenames <- c("Tags")
library(XML)
library(R.utils)
url <- "http://thedataincubator-challenge.s3.amazonaws.com/HCHACdrgRBoVokdgdJNF/"
for (filename in filenames){
download.file(paste(url,filename,".xml.gz", sep = ""),
paste(filename,".xml.gz", sep = ""),
method="auto")
gunzip(paste(filename,".xml.gz", sep = ""))
xml_filename <- paste("xml_", filename, sep = "")
assign(xml_filename, xmlTreeParse(paste(filename,".xml",sep = "")))
}
for (filename in filenames){
xml_filename <- paste("xml_", filename, sep = "")
assign(xml_filename, xmlTreeParse(paste(filename,".xml",sep = "")))
}
list_Tags <- xmlToList(xml_Tags)
df_Tags[1,] <- list_Tags[[1]]
df_Tags
length(list_Tags)
df_Tags <- data.frame(Id=integer(),
TagName=character(),
Count=integer(),
ExcerptPostId=integer(),
WikiPostId=integer(),
stringsAsFactors=FALSE)
for (i in length(list_Tags)){
df_Tags[i,] <- list_Tags[[i]]
}
x <- list_Tags[[3]]
length(x) <- 5
lapply(list_Tags,function(x){length(x)<-5})
list_Tags[[2]]
list_Tags[[3]]
list_Tags[[7]]
list_Tags[[8]]
list_Tags[[9]]
library(dplyr)
bind_rows(list_Tags[[1]],list_Tags[[2]],list_Tags[[3]])
bind_rows(data.frame(list_Tags[[1]]),
data.frame(list_Tags[[2]]),
data.frame(list_Tags[[3]]))
data.frame(list_Tags[[1]])
data_frame(list_Tags[[3]]))
data_frame(list_Tags[[1]]
)
list_Tags[[2]]
list_Tags[[1:2]]
list_Tags[[1]][2]
list_Tags[[1]]$TagName
list_Tags$TagName
list_Tags$TagName[[1]]
data_frame_(list_Tags[[1]])
data_frame_(list_Tags)
list_to_df <- function(listfordf){
if(!is.list(named.list)) stop("it should be a list")
df <- list(list.element = listfordf)
class(df) <- c("tbl_df", "data.frame")
attr(df, "row.names") <- .set_row_names(length(listfordf))
if (!is.null(names(listfordf))) {
df$name <- names(listfordf)
}
df
}
list_to_df(list_Tags[[1]])
list_to_df <- function(listfordf){
df <- list(list.element = listfordf)
class(df) <- c("tbl_df", "data.frame")
attr(df, "row.names") <- .set_row_names(length(listfordf))
if (!is.null(names(listfordf))) {
df$name <- names(listfordf)
}
df
}
list_to_df(list_Tags[[1]])
transpose(list_Tags[[1]])
t(list_Tags[[1]])
t(list_to_df(list_Tags[[1]]))
bind_rows(t(data_frame(list_Tags[[1]])),
t(data_frame(list_Tags[[2]])),
t(data_frame(list_Tags[[3]])))
data_frame(list_Tags[[1]])
a<-data_frame(list_Tags[[1]])
t(a)
class(t(a))
class(a)
a<-data_frame(t(list_Tags[[1]]))
t(list_Tags[[1]])
class(list_Tags[[1]])
class(t(list_Tags[[1]]))
class(as.list(t(list_Tags[[1]])))
bind_rows(as.list(t(data_frame(list_Tags[[1]]))),
as.list(t(data_frame(list_Tags[[2]]))),
as.list(t(data_frame(list_Tags[[3]]))))
bind_rows(data_frame(as.list(t(list_Tags[[1]]))),
data_frame(as.list(t(list_Tags[[2]]))),
data_frame(as.list(t(list_Tags[[3]]))))
data_frame(as.list(t(list_Tags[[1]])))
t(list_Tags[[1]])
list(t(list_Tags[[1]]))
bind_rows(data_frame(list(t(list_Tags[[1]]))),
data_frame(list(t(list_Tags[[2]]))),
data_frame(list(t(list_Tags[[3]]))))
data_frame(list_Tags[[1]])
data_frame(list_Tags)
melt(list_Tags)
library(reshape2)
melt(list_Tags)
melt(list_Tags[[1]])
class(melt(list_Tags[[1]]))
?as_data_frame
?"as.list"
as.vector(list_Tags[[1]])
data_frame(as.vector(list_Tags[[1]]))
data_frame(t(as.vector(list_Tags[[1]])))
tbl(list_Tags[[1]])
tbl(list_Tags)
ul1 = lapply(list_Tags, ldply)
library(plyr)
ul1 = lapply(list_Tags, ldply)
ul1
dd = ldply(ul1)[,2:3]
dd = ldply(ul1)
dd
?dcast
names(dd)
dcast(dd,V1~.id)
dd1<-dcast(dd,V1~.id)
names(dd1)
head(dd1)
dd1<-dcast(dd)
dd1<-dcast(dd,.id)
dd1<-dcast(dd,V1~id)
head(dd1)
head(dd)
ul1
dd = ldply(ul1)$row
head(dd)
dd = ldply(ul1)
class(dd)
class(ul1)
ul1[[1]]
t(ul1[[1]])
class(t(ul1[[1]]))
t(ul1[[3]])
df <- ldply(list_Tags,data.frame)
head(df)
df <- ldply(ul1,data.frame)
df <- ldply(ul1[[1]],data.frame)
df
df <- ldply(list_Tags[[1]],data.frame)
df
newlist <- lapply(list_Tags, "[[", i)
newlist <- lapply(list_Tags, "[[", 1)
newlist[1:10]
newlist[[1:10]]
newlist[[1]]
list_Tags[[[1]]]
list_Tags[[1]]
class(list_Tags[[1]])
newlist <- lapply(list_Tags, "[[", 4)
newlist <- lapply(list_Tags, "[[", 3)
dt = as.data.table(list_Tags)
after = as.list(data.table(t(dt)))
dt = data_frame(list_Tags)
after = as.list(data_frame(t(dt)))
dt = data_frame(list_Tags[[1]])
after = as.list(data_frame(t(dt)))
class(t(dt))
t(dt)
dt = data_frame(list_Tags[[3]])
t(dt)
list_to_df(list_Tags[[3]])
list_to_df(list_Tags)
a<-list_to_df(list_Tags)
a[3]
a[1]
a[[1]]
a[1,1]
a[1,1][1]
a[1,1][2]
a[1,1][3]
a[1,1][6]
makeDF <- function(List, Names) {
m <- t(vapply(List,
FUN = function(X) unlist(X)[Names],
FUN.VALUE = numeric(length(Names))))
as.data.frame(m)
}
names(list_Tags[[1]])
nms <- names(list_Tags[[1]])
ll <- list_Tags
nms <- names(list_Tags[[1]])
system.time(makeDF(ll, nms))
# user  system elapsed
# 0.47    0.00    0.47
ll <- list_Tags[[1]]
nms <- names(list_Tags[[1]])
system.time(makeDF(ll, nms))
# user  system elapsed
# 0.47    0.00    0.47
numeric(length(nms))
unlist(ll,use.names=TRUE)
a<-unlist(ll,use.names=TRUE)
class(a)
a[1]
a[2]
ll <- unlist(list_Tags[[1]],use.names=TRUE)
nms <- names(list_Tags[[1]])
system.time(makeDF(ll, nms))
# user  system elapsed
# 0.47    0.00    0.47
ll
unlist(ll)
unlist(a)
d<-as.data.frame(a)
d<-as.data.frame(t(a))
d
ll
ll <- unlist(list_Tags[[1]],use.names=TRUE)
d<-as.data.frame(t(ll))
d<-as.data.frame(t(unlist(list_Tags[[3]],use.names=TRUE)))
d
d<-data_frame(t(unlist(list_Tags[[3]],use.names=TRUE)))
testdf<-lapply(list_Tags,function(x){as.data.frame(t(unlist(list_Tags[[1]],use.names=TRUE)))})
d<-as.data.frame(testdf)
for (i in length(list_Tags)){
df_Tags[i,] <- as.data.frame(t(unlist(list_Tags[[i]],use.names=TRUE)))
}
df_Tags
as.data.frame(t(unlist(list_Tags[[1]],use.names=TRUE)))
df_Tags[1,]<-as.data.frame(t(unlist(list_Tags[[1]],use.names=TRUE)))
head(df_Tags)
a<-as.data.frame(t(unlist(list_Tags[[1]],use.names=TRUE)))
class(a)
b<-as.data.frame(t(unlist(list_Tags[[2]],use.names=TRUE)))
c<-as.data.frame(t(unlist(list_Tags[[3]],use.names=TRUE)))
combine(a,b,c)
a
rbind(a,b)
rbind(a,b,c)
bind_rows(a,b)
bind_rows(a,b,c)
df_Tags <- data.frame(Id=integer(),
TagName=character(),
Count=integer(),
ExcerptPostId=integer(),
WikiPostId=integer(),
stringsAsFactors=FALSE)
for (i in length(list_Tags)){
tmp <- as.data.frame(t(unlist(list_Tags[[i]],use.names=TRUE)),
stringsAsFactors = FALSE)
bind_rows(df_Tags,tmp)
}
df_Tags <- data.frame(Id=character(),
TagName=character(),
Count=character(),
ExcerptPostId=character(),
WikiPostId=character(),
stringsAsFactors=FALSE)
for (i in length(list_Tags)){
tmp <- as.data.frame(t(unlist(list_Tags[[i]],use.names=TRUE)),
stringsAsFactors = FALSE)
bind_rows(df_Tags,tmp)
}
for (i in length(list_Tags)){
tmp <- as.data.frame(t(unlist(list_Tags[[i]],use.names=TRUE)),
stringsAsFactors = FALSE)
df_Tags<-bind_rows(df_Tags,tmp)
}
length(list_Tags)
tmp
df_Tags
for (i in length(list_Tags)){
tmp <- as.data.frame(t(unlist(list_Tags[[i]],use.names=TRUE)),
stringsAsFactors = FALSE)
new_df<-bind_rows(df_Tags,tmp)
df_Tags<-new_df
}
for (i in length(list_Tags)){
i
tmp <- as.data.frame(t(unlist(list_Tags[[i]],use.names=TRUE)),
stringsAsFactors = FALSE)
new_df<-bind_rows(df_Tags,tmp)
df_Tags<-new_df
}
j <- 0
for (i in length(list_Tags)){
j <- j + i
tmp <- as.data.frame(t(unlist(list_Tags[[i]],use.names=TRUE)),
stringsAsFactors = FALSE)
new_df<-bind_rows(df_Tags,tmp)
df_Tags<-new_df
}
df_Tags <- data.frame(Id=character(),
TagName=character(),
Count=character(),
ExcerptPostId=character(),
WikiPostId=character(),
stringsAsFactors=FALSE)
for (i in 1:length(list_Tags)){
j <- j + i
tmp <- as.data.frame(t(unlist(list_Tags[[i]],use.names=TRUE)),
stringsAsFactors = FALSE)
df_Tags<-bind_rows(df_Tags,tmp)
}
df_Tags
rm(iris)
rm(mtcars)
rm(new_df)
rm(tmp)
rm(dd)
rm(dd1)
rm(df)
rm(c(a,b,c))
rm(c("a","b","c"))
rm(a)
rm(b)
rm(c)
rm(d)
rm(A)
rm(dt)
rm(x)
rm(y)
rm(newlist)
class(df_Tags)
small_list_Tags <- list_Tags[[1:3]]
small_list_Tags <- list_Tags[1:3]
small_list_Tags
small_list_Tags[[3]]
df_Tags
copy_df <- df_Tags
copy_df$Count <- as.numeric(copy_df$Count)
colClasses(df_Tags)
summary(df_Tags)
summary(copy_df)
copy_df
as.numeric)
copy_df[,c(1,3,4,5)] <- sapply(copy_df[,c(1,3,4,5)],as.numeric)
summary(copy_df)
copy_df %>%
select(TagName, Count) %>%
mutate(Proportion = Count/sum(Count, na.rm=TRUE)) %>%
arrange(Proportion)
copy_df %>%
select(TagName, Count) %>%
mutate(Proportion = Count/sum(Count, na.rm=TRUE)) %>%
arrange(desc(Proportion))
copy_df %>%
select(TagName, Count) %>%
mutate(Proportion = Count/sum(Count, na.rm=TRUE)) %>%
arrange(desc(Proportion))[5]
copy_df %>%
select(TagName, Count) %>%
mutate(Proportion = Count/sum(Count, na.rm=TRUE)) %>%
arrange(desc(Proportion))
tmp <- copy_df %>%
select(TagName, Count) %>%
mutate(Proportion = Count/sum(Count, na.rm=TRUE)) %>%
arrange(desc(Proportion))
tmp$Proportion[5]
# Deploy Shiny App:
setwd("C:/Users/Iain/Google Drive/Github/Blog/SoccerRanks/SoccerRanks")
library(shiny)
library(shinyapps)
runApp()
shinyapps::setAccountInfo(name='iainharlow', token='3F32C8E13F68BE212B59B27CC3F42353', secret='slJWagUoVSlk+LoHU0LdR/k7TyLw5ILcfbDBs57h')
deployApp(appName="SoccerRanks")
deployApp(appName="SoccerRanks")
shinyapps::showLogs
runApp()
install.packages('shiny')
